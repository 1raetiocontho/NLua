# Repo: codefoco/AzureDevopsTemplates
resources:
  repositories:
    - repository: templates
      type: github
      name: codefoco/AzureDevopsTemplates
      endpoint: codefoco

pool:
  vmImage: 'macOS-10.14'
  demands: msbuild

steps:
- checkout: self
  submodules: 'true'


- template: common-dotnet.yml@templates
- template: common-macos.yml@templates

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: NLua.sln

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: NLua.Mac.sln

- task: PowerShell@2
  displayName: 'PowerShell Script'
  inputs:
    targetType: filePath
    filePath: ./devops/PreBuild.ps1
    arguments: 'NLua NLua.nuspec'

- task: MSBuild@1
  displayName: 'Build solution NLua.sln'
  inputs:
    solution: NLua.sln
    configuration: Release

- task: MSBuild@1
  displayName: 'Build solution NLua.Mac.sln'
  inputs:
    solution: NLua.Mac.sln
    configuration: Release

- script: 'mono packages/NUnit.ConsoleRunner.3.10.0/tools/nunit3-console.exe ./tests/build/net45/bin/Release/NLuaTest.dll --result=TEST-Result-Mac.xml'
  displayName: 'Run OSX tests'

- task: PublishTestResults@2
  displayName: 'Publish Mac Test Results TEST-Result-Mac.xml'
  inputs:
    testResultsFormat: NUnit
    testResultsFiles: 'TEST-Result-Mac.xml'

- task: MSBuild@1
  displayName: 'Run iOS tests'
  inputs:
    solution: tests/build/xamarinios/NLuaTest.XamariniOS.csproj
    platform: iPhoneSimulator
    configuration: Release
    msbuildArguments: '/t:RunSimulatorTests'

- task: PublishTestResults@2
  displayName: 'Publish iOS Test Results TEST-Result-iOS.xml'
  inputs:
    testResultsFormat: NUnit
    testResultsFiles: 'tests/build/xamarinios/TEST-Result-Xamarin.iOS.xml'

- task: MSBuild@1
  displayName: 'Run tvOS tests'
  inputs:
    solution: tests/build/xamarintvos/NLuaTest.XamarinTVOS.csproj
    platform: iPhoneSimulator
    configuration: Release
    msbuildArguments: '/t:RunSimulatorTests'

- task: PublishTestResults@2
  displayName: 'Publish tvOS Test Results TEST-Result-tvOS.xml'
  inputs:
    testResultsFormat: NUnit
    testResultsFiles: 'tests/build/xamarintvos/TEST-Result-Xamarin.TVOS.xml'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Xamarin.iOS.NLua.dll'
  inputs:
    PathtoPublish: lib/Release/xamarinios/NLua.dll
    ArtifactName: Xamarin.iOS.NLua.dll

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Xamarin.tvOS.NLua.dll'
  inputs:
    PathtoPublish: lib/Release/xamarintvos/NLua.dll
    ArtifactName: Xamarin.tvOS.NLua.dll

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Xamarin.watchOS.NLua.dll'
  inputs:
    PathtoPublish: lib/Release/xamarinwatchos/NLua.dll
    ArtifactName: Xamarin.watchOS.NLua.dll

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Xamarin.Mac.NLua.dll'
  inputs:
    PathtoPublish: lib/Release/xamarinmac/NLua.dll
    ArtifactName: Xamarin.Mac.NLua.dll

- task: TriggerBuild@3
  displayName: 'Trigger a new build of NLua.Windows'
  inputs:
    buildDefinition: 'NLua.Windows'
    ignoreSslCertificateErrors: true
    useSameSourceVersion: true
    password: '$(myToken)'

- template: send-telegram.yml@templates
